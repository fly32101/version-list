name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -o version-list

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: version-list

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: version-list
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cross-platform:
    name: Cross-platform build
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: go mod download

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "$GOOS" = "windows" ]; then
            go build -o version-list-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            go build -o version-list-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: version-list-${{ matrix.goos }}-${{ matrix.goarch }}*

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: version-list-${{ matrix.goos }}-${{ matrix.goarch }}*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
